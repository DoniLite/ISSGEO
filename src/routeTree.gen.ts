/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as FaqRouteImport } from './routes/faq'
import { Route as ErrorRouteImport } from './routes/error'
import { Route as CompetencesRouteImport } from './routes/competences'
import { Route as CalendarRouteImport } from './routes/calendar'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CoursesIndexRouteImport } from './routes/courses/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as TeamJoinRouteImport } from './routes/team/join'
import { Route as ServicesServiceIdRouteImport } from './routes/services/$serviceId'
import { Route as CoursesCourseIdRouteImport } from './routes/courses/$courseId'
import { Route as AdminLoginRouteImport } from './routes/admin/login'
import { Route as AdminJobRouteImport } from './routes/admin/job'

const FaqRoute = FaqRouteImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => rootRouteImport,
} as any)
const ErrorRoute = ErrorRouteImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => rootRouteImport,
} as any)
const CompetencesRoute = CompetencesRouteImport.update({
  id: '/competences',
  path: '/competences',
  getParentRoute: () => rootRouteImport,
} as any)
const CalendarRoute = CalendarRouteImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesIndexRoute = CoursesIndexRouteImport.update({
  id: '/courses/',
  path: '/courses/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamJoinRoute = TeamJoinRouteImport.update({
  id: '/team/join',
  path: '/team/join',
  getParentRoute: () => rootRouteImport,
} as any)
const ServicesServiceIdRoute = ServicesServiceIdRouteImport.update({
  id: '/services/$serviceId',
  path: '/services/$serviceId',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesCourseIdRoute = CoursesCourseIdRouteImport.update({
  id: '/courses/$courseId',
  path: '/courses/$courseId',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminLoginRoute = AdminLoginRouteImport.update({
  id: '/admin/login',
  path: '/admin/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminJobRoute = AdminJobRouteImport.update({
  id: '/admin/job',
  path: '/admin/job',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/calendar': typeof CalendarRoute
  '/competences': typeof CompetencesRoute
  '/error': typeof ErrorRoute
  '/faq': typeof FaqRoute
  '/admin/job': typeof AdminJobRoute
  '/admin/login': typeof AdminLoginRoute
  '/courses/$courseId': typeof CoursesCourseIdRoute
  '/services/$serviceId': typeof ServicesServiceIdRoute
  '/team/join': typeof TeamJoinRoute
  '/admin': typeof AdminIndexRoute
  '/courses': typeof CoursesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/calendar': typeof CalendarRoute
  '/competences': typeof CompetencesRoute
  '/error': typeof ErrorRoute
  '/faq': typeof FaqRoute
  '/admin/job': typeof AdminJobRoute
  '/admin/login': typeof AdminLoginRoute
  '/courses/$courseId': typeof CoursesCourseIdRoute
  '/services/$serviceId': typeof ServicesServiceIdRoute
  '/team/join': typeof TeamJoinRoute
  '/admin': typeof AdminIndexRoute
  '/courses': typeof CoursesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/calendar': typeof CalendarRoute
  '/competences': typeof CompetencesRoute
  '/error': typeof ErrorRoute
  '/faq': typeof FaqRoute
  '/admin/job': typeof AdminJobRoute
  '/admin/login': typeof AdminLoginRoute
  '/courses/$courseId': typeof CoursesCourseIdRoute
  '/services/$serviceId': typeof ServicesServiceIdRoute
  '/team/join': typeof TeamJoinRoute
  '/admin/': typeof AdminIndexRoute
  '/courses/': typeof CoursesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/calendar'
    | '/competences'
    | '/error'
    | '/faq'
    | '/admin/job'
    | '/admin/login'
    | '/courses/$courseId'
    | '/services/$serviceId'
    | '/team/join'
    | '/admin'
    | '/courses'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/calendar'
    | '/competences'
    | '/error'
    | '/faq'
    | '/admin/job'
    | '/admin/login'
    | '/courses/$courseId'
    | '/services/$serviceId'
    | '/team/join'
    | '/admin'
    | '/courses'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/calendar'
    | '/competences'
    | '/error'
    | '/faq'
    | '/admin/job'
    | '/admin/login'
    | '/courses/$courseId'
    | '/services/$serviceId'
    | '/team/join'
    | '/admin/'
    | '/courses/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CalendarRoute: typeof CalendarRoute
  CompetencesRoute: typeof CompetencesRoute
  ErrorRoute: typeof ErrorRoute
  FaqRoute: typeof FaqRoute
  AdminJobRoute: typeof AdminJobRoute
  AdminLoginRoute: typeof AdminLoginRoute
  CoursesCourseIdRoute: typeof CoursesCourseIdRoute
  ServicesServiceIdRoute: typeof ServicesServiceIdRoute
  TeamJoinRoute: typeof TeamJoinRoute
  AdminIndexRoute: typeof AdminIndexRoute
  CoursesIndexRoute: typeof CoursesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/faq': {
      id: '/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/error': {
      id: '/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/competences': {
      id: '/competences'
      path: '/competences'
      fullPath: '/competences'
      preLoaderRoute: typeof CompetencesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/': {
      id: '/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoursesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/team/join': {
      id: '/team/join'
      path: '/team/join'
      fullPath: '/team/join'
      preLoaderRoute: typeof TeamJoinRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/services/$serviceId': {
      id: '/services/$serviceId'
      path: '/services/$serviceId'
      fullPath: '/services/$serviceId'
      preLoaderRoute: typeof ServicesServiceIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/$courseId': {
      id: '/courses/$courseId'
      path: '/courses/$courseId'
      fullPath: '/courses/$courseId'
      preLoaderRoute: typeof CoursesCourseIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/login': {
      id: '/admin/login'
      path: '/admin/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/job': {
      id: '/admin/job'
      path: '/admin/job'
      fullPath: '/admin/job'
      preLoaderRoute: typeof AdminJobRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CalendarRoute: CalendarRoute,
  CompetencesRoute: CompetencesRoute,
  ErrorRoute: ErrorRoute,
  FaqRoute: FaqRoute,
  AdminJobRoute: AdminJobRoute,
  AdminLoginRoute: AdminLoginRoute,
  CoursesCourseIdRoute: CoursesCourseIdRoute,
  ServicesServiceIdRoute: ServicesServiceIdRoute,
  TeamJoinRoute: TeamJoinRoute,
  AdminIndexRoute: AdminIndexRoute,
  CoursesIndexRoute: CoursesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
